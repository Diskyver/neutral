name: Rust

on:
  push:
    branches: [ main ]
    tags:
      - '*' 
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt 

      - name: Check code format
        run: cargo fmt --all -- --check

  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: "doc --lib --all-features"
        run: cargo doc --lib --no-deps --all-features --document-private-items

  stable-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy

      - name: Build debug
        run: cargo build --verbose

      - name: Build release
        run: cargo build --release --verbose

      - uses: actions/cache@v2
        id: stable-cargo-build
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}

  stable-tests:
    runs-on: ubuntu-latest
    needs: ['stable-build']
    steps:
      - name: Restore cache
        uses: actions/cache@v2
        id: stable-cargo-build
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-stable-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy

      - name: Cargo test debug
        run: cargo test --all-features

      - name: Cargo test release
        run: cargo test --release --all-features